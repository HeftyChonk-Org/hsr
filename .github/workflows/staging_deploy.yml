run-name: Test, build, and deploy the PR to main created by @${{ github.actor }} to staging environment

on:
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - main

jobs:
  run_integ_test:
    name: Run integration test
    environment: staging_environment
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04, ubuntu-latest]
        version: [18, 20, 22]
        # os: [ubuntu-22.04]
        # version: [18]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.version }}
      - name: Print environment
        run: echo ${{ vars.APP_ENV }}
      - name: Install Dependencies
        run: npm ci
      - name: Run linter tests
        run: npm run lint
      - name: Run integration tests
        run: npm run test
  build_image:
    name: Docker build and push to Docker Hub
    environment: staging_environment
    permissions:
      contents: read
      id-token: write
    if: ${{ success() }}
    needs:
      - run_integ_test
    outputs:
      imageid: ${{ steps.build_and_push.outputs.imageid }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: build_and_push
        uses: docker/build-push-action@v6
        with:
          # todo: store image name in a variable
          # fix pr comment step
          platforms: linux/amd64
          push: true
          tags: heftychonk/hsr:${{ vars.APP_ENV }}-${{ github.sha }}
          context: .
          cache-from: type=local,src=.cache
          cache-to: type=local,dest=.cache
          secrets: |
            "REDIS_URL=${{ secrets.REDIS_URL }}"
            "DATABASE_URL=${{ secrets.DATABASE_URL }}"
            "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}"
            "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}"
            "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}"
  deploy_to_staging:
    name: Deploy build artifact to staging environment
    environment: staging_environment
    if: ${{ success() }}
    needs:
      - build_image
    runs-on: ubuntu-22.04
    steps:
      - run: echo ${{ needs.build_image.outputs.imageid }}
      - name: Post image ID to PR
        uses: actions/github-script@v7
        with:
          script: |
            const imageId = '${{ needs.build_image.outputs.imageid }}';
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `The Docker image ID for this build is: ${imageId}`
            });
      # - name: Checkout code
      #   uses: actions/checkout@v2
      # - name: Set up Node.js
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: "14"
      # - name: Install dependencies
      #   run: npm install
      # - name: Run build
      #   run: npm run build
      # - name: Deploy to Staging
      #   run: |
      #     echo "Deploying to staging environment"
      #     # Add your deployment commands here

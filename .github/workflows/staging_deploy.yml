run-name: Test, build, and deploy the PR to main created by @${{ github.actor }} to staging environment

on:
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - main

jobs:
  deploy_to_staging:
    name: Deploy build artifact to staging environment
    environment: staging_environment
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-22.04
    steps:
      - name: Post image ID to PR
        uses: actions/github-script@v7
        with:
          script: |
            const imageId = '${{ vars.APP_ENV }}';
            console.log(`ref_name: ${context.ref_name}`);
            let commendId;
            try {
              commentId = await github.rest.actions.getRepoVariable({
                owner: context.repo.owner,
                repo: context.repo.repo,
                variable_name: context.ref_name
              });
            } catch (error) {
              console.log(`error: ${error}`);
            }
            console.log(`commentId: ${commentId}`);
            if (commentId) {
              await github.rest.issues.updateComment({
                comment_id: commentId,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `The Docker image ID for this build is: ${imageId}`
              });
            } else {
              const { data } = await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `The Docker image ID for this build is: ${imageId}`
              });
              await github.rest.actions.createRepoVariable({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: context.ref_name,
                value	: data.id
              });
            }
